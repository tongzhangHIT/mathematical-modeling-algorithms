
%% FEATool Version 1.7.1 Multiphysics, Build 18.01.008, Model M-Script file.
%% Created on 22-Jan-2018 21:53:15 with Matlab 9.0.0.341360 (R2016a) PCWIN64.

%% Starting new model.
fea.sdim = { 'x', 'y', 'z' };
fea.geom = struct;
fea.geom = struct;
fea = addphys( fea, @heattransfer, { 'T' } );

%% Geometry operations.
gobj = gobj_block( 0, 1.5, -0.35, 0.35, 0, -0.7, 'B1' );
fea = geom_add_gobj( fea, gobj );
fea.grid = gridgen_gmsh( fea, 'hmax', 0.15, 'nsm', 3 );

%% Equation settings.
fea.phys.ht.dvar = { 'T' };
fea.phys.ht.sfun = { 'sflag1' };
fea.phys.ht.eqn.coef = { 'rho_ht', 'rho', 'Density', { '1000' };
                         'cp_ht', 'C_p', 'Heat capacity', { '4200' };
                         'k_ht', 'k', 'Thermal conductivity', { '0.64' };
                         'u_ht', 'u', 'Convection velocity in x-direction', { '0' };
                         'v_ht', 'v', 'Convection velocity in y-direction', { '0' };
                         'w_ht', 'w', 'Convection velocity in z-direction', { '0' };
                         'q_ht', 'Q', 'Heat source', { '4.2e8' };
                         'T0_ht', 'T_0', 'Initial condition for T', { '321' } };
fea.phys.ht.eqn.seqn = 'rho_ht*cp_ht*T'' - k_ht*(Tx_x + Ty_y + Tz_z) + rho_ht*cp_ht*(u_ht*Tx_t + v_ht*Ty_t + w_ht*Tz_t) = q_ht';
fea.phys.ht.eqn.vars = { 'Temperature, T', 'T';
                         'Temperature gradient, T', { 'Tx', 'Ty', 'Tz' } };
fea.phys.ht.prop.isaxi = 0;
fea.phys.ht.prop.artstab.id = 0;
fea.phys.ht.prop.artstab.id_coef = 0.5;
fea.phys.ht.prop.artstab.sd = 0;
fea.phys.ht.prop.artstab.sd_coef = 0.25;
fea.phys.ht.prop.active = 1;

%% Boundary settings.
fea.phys.ht.bdr.sel = [ 2, 2, 2, 2, 2, 4 ];
fea.phys.ht.bdr.coef = { 'bcr_ht', 'T = T_0', 'Temperature', { 'T_0' }, { 1, 1, 1, 1, 1, 1 }, [], { 0, 0, 0, 0, 0, 0 };
                         'bcc_ht', 'n.(-kgrad T) = 0', 'Convective flux/outflow', [], { 0, 0, 0, 0, 0, 0 }, [], { 0, 0, 0, 0, 0, 0 };
                         'bci_ht', 'n.(-kgrad T + rhoC_puT) = 0', 'Thermal insulation/symmetry', [], { 0, 0, 0, 0, 0, 0 }, { 'rho_ht*cp_ht*(nx*u_ht+ny*v_ht+nz*w_ht)*T' }, { '0', '0', '0', '0', '0', '0' };
                         'bcf_ht', '-n.(-kgrad T + rhoC_puT) = q_0 + h*(T_inf-T) + Const*(T_amb4-T4)', 'Heat flux', { { 'q_0', 'h', 'T_inf', 'Const', 'T_amb' } }, { 0, 0, 0, 0, 0, 0 }, { 'rho_ht*cp_ht*(nx*u_ht+ny*v_ht+nz*w_ht)*T+(', ')+(', ')*((', ')-T)+(', ')*((', ')^4-T^4)' }, { { '0', '0', '0', '0', '0' }, { '0', '0', '0', '0', '0' }, { '0', '0', '0', '0', '0' }, { '0', '0', '0', '0', '0' }, { '0', '0', '0', '0', '0' }, { '0', '15', '308', '0', '0' } } };
fea.phys.ht.bdr.vars = { 'Normal conductive heat flux, T', '-k_ht*(nx*Tx+ny*Ty+nz*Tz)';
                         'Normal convective heat flux, T', 'rho_ht*cp_ht*(nx*u_ht+ny*v_ht+nz*w_ht)*T';
                         'Normal total heat flux, T', '-k_ht*(nx*Tx+ny*Ty+nz*Tz)+rho_ht*cp_ht*(nx*u_ht+ny*v_ht+nz*w_ht)*T' };
fea.phys.ht.prop.isaxi = 0;
fea.phys.ht.prop.artstab.id = 0;
fea.phys.ht.prop.artstab.id_coef = 0.5;
fea.phys.ht.prop.artstab.sd = 0;
fea.phys.ht.prop.artstab.sd_coef = 0.25;
fea.phys.ht.prop.active = 1;

%% Solver call.
fea = parsephys( fea );
fea = parseprob( fea );

fea.sol.u = solvestat( fea, ...
                       'tstep', 0.1, ...
                       'icub', 2, ...
                       'nlrlx', 1, ...
                       'toldef', 1e-06, ...
                       'tolchg', 1e-06, ...
                       'reldef', 0, ...
                       'relchg', 1, ...
                       'maxnit', 20, 'init', { 'T0_ht' }, 'solcomp', 1 );

%% Postprocessing.
postplot( fea, ...
          'sliceexpr', 'T', ...
          'slicex', 0.75, ...
          'slicey', 0, ...
          'slicez', -0.35, ...
          'alpha', 1, ...
          'colorbar', 1, ...
          'solnum', 1 );
postplot( fea, ...
          'surfexpr', 'T', ...
          'isoexpr', 'T', ...
          'isolev', 10, ...
          'sliceexpr', 'T', ...
          'slicex', 0.75, ...
          'slicey', 0, ...
          'slicez', -0.35, ...
          'alpha', 1, ...
          'colorbar', 1, ...
          'solnum', 1 );
postplot( fea, ...
          'surfexpr', 'T', ...
          'isoexpr', 'T', ...
          'isolev', 10, ...
          'alpha', 1, ...
          'colorbar', 1, ...
          'solnum', 1 );
postplot( fea, ...
          'surfexpr', 'T', ...
          'sliceexpr', 'T', ...
          'slicex', 0.75, ...
          'slicey', 0, ...
          'slicez', -0.35, ...
          'alpha', 1, ...
          'colorbar', 1, ...
          'solnum', 1 );

%% Solver call.
fea = parsephys( fea );
fea = parseprob( fea );

[fea.sol.u,fea.sol.t] = solvetime( fea, ...
                                   'tstep', 0.1, ...
                                   'tmax', 0.1, ...
                                   'tstop', 1e-06, ...
                                   'ischeme', 3, ...
                                   'imass', 2, ...
                                   'icub', 2, ...
                                   'nlrlx', 1, ...
                                   'toldef', 1e-06, ...
                                   'tolchg', 1e-06, ...
                                   'reldef', 0, ...
                                   'relchg', 1, ...
                                   'maxnit', 20, 'init', { 'T0_ht' }, 'solcomp', 1 );

%% Postprocessing.
postplot( fea, ...
          'surfexpr', 'T', ...
          'sliceexpr', 'T', ...
          'slicex', 0.75, ...
          'slicey', 0, ...
          'slicez', -0.35, ...
          'alpha', 1, ...
          'colorbar', 1, ...
          'solnum', 3 );

%% Solver call.
fea = parsephys( fea );
fea = parseprob( fea );

[fea.sol.u,fea.sol.t] = solvetime( fea, ...
                                   'tstep', 0.1, ...
                                   'tmax', 1, ...
                                   'tstop', 1e-06, ...
                                   'ischeme', 3, ...
                                   'imass', 2, ...
                                   'icub', 2, ...
                                   'nlrlx', 1, ...
                                   'toldef', 1e-06, ...
                                   'tolchg', 1e-06, ...
                                   'reldef', 0, ...
                                   'relchg', 1, ...
                                   'maxnit', 20, 'init', { 'T0_ht' }, 'solcomp', 1 );

%% Postprocessing.
postplot( fea, ...
          'surfexpr', 'T', ...
          'sliceexpr', 'T', ...
          'slicex', 0.75, ...
          'slicey', 0, ...
          'slicez', -0.35, ...
          'alpha', 1, ...
          'colorbar', 1, ...
          'solnum', 12 );

%% Solver call.
fea = parsephys( fea );
fea = parseprob( fea );

[fea.sol.u,fea.sol.t] = solvetime( fea, ...
                                   'tstep', 0.1, ...
                                   'tmax', 0.1, ...
                                   'tstop', 1e-06, ...
                                   'ischeme', 3, ...
                                   'imass', 2, ...
                                   'icub', 2, ...
                                   'nlrlx', 1, ...
                                   'toldef', 1e-06, ...
                                   'tolchg', 1e-06, ...
                                   'reldef', 0, ...
                                   'relchg', 1, ...
                                   'maxnit', 20, 'init', { 'T0_ht' }, 'solcomp', 1 );

%% Postprocessing.
postplot( fea, ...
          'surfexpr', 'T', ...
          'sliceexpr', 'T', ...
          'slicex', 0.75, ...
          'slicey', 0, ...
          'slicez', -0.35, ...
          'alpha', 1, ...
          'colorbar', 1, ...
          'solnum', 3 );

%% Boundary settings.
fea.phys.ht.bdr.sel = [ 2, 2, 2, 2, 2, 4 ];
fea.phys.ht.bdr.coef = { 'bcr_ht', 'T = T_0', 'Temperature', { 'T_0' }, { 1, 1, 1, 1, 1, 1 }, [], { 0, 0, 0, 0, 0, 0 };
                         'bcc_ht', 'n.(-kgrad T) = 0', 'Convective flux/outflow', [], { 0, 0, 0, 0, 0, 0 }, [], { 0, 0, 0, 0, 0, 0 };
                         'bci_ht', 'n.(-kgrad T + rhoC_puT) = 0', 'Thermal insulation/symmetry', [], { 0, 0, 0, 0, 0, 0 }, { 'rho_ht*cp_ht*(nx*u_ht+ny*v_ht+nz*w_ht)*T' }, { '0', '0', '0', '0', '0', '0' };
                         'bcf_ht', '-n.(-kgrad T + rhoC_puT) = q_0 + h*(T_inf-T) + Const*(T_amb4-T4)', 'Heat flux', { { 'q_0', 'h', 'T_inf', 'Const', 'T_amb' } }, { 0, 0, 0, 0, 0, 0 }, { 'rho_ht*cp_ht*(nx*u_ht+ny*v_ht+nz*w_ht)*T+(', ')+(', ')*((', ')-T)+(', ')*((', ')^4-T^4)' }, { { '0', '0', '0', '0', '0' }, { '0', '0', '0', '0', '0' }, { '0', '0', '0', '0', '0' }, { '0', '0', '0', '0', '0' }, { '0', '0', '0', '0', '0' }, { '0', '15', '308', '0', '0' } } };
fea.phys.ht.bdr.vars = { 'Normal conductive heat flux, T', '-k_ht*(nx*Tx+ny*Ty+nz*Tz)';
                         'Normal convective heat flux, T', 'rho_ht*cp_ht*(nx*u_ht+ny*v_ht+nz*w_ht)*T';
                         'Normal total heat flux, T', '-k_ht*(nx*Tx+ny*Ty+nz*Tz)+rho_ht*cp_ht*(nx*u_ht+ny*v_ht+nz*w_ht)*T' };
fea.phys.ht.prop.isaxi = 0;
fea.phys.ht.prop.artstab.id = 0;
fea.phys.ht.prop.artstab.id_coef = 0.5;
fea.phys.ht.prop.artstab.sd = 0;
fea.phys.ht.prop.artstab.sd_coef = 0.25;
fea.phys.ht.prop.active = 1;

%% Solver call.
fea = parsephys( fea );
fea = parseprob( fea );

[fea.sol.u,fea.sol.t] = solvetime( fea, ...
                                   'tstep', 0.1, ...
                                   'tmax', 0.1, ...
                                   'tstop', 1e-06, ...
                                   'ischeme', 3, ...
                                   'imass', 2, ...
                                   'icub', 2, ...
                                   'nlrlx', 1, ...
                                   'toldef', 1e-06, ...
                                   'tolchg', 1e-06, ...
                                   'reldef', 0, ...
                                   'relchg', 1, ...
                                   'maxnit', 20, 'init', { 'T0_ht' }, 'solcomp', 1 );

%% Postprocessing.
postplot( fea, ...
          'surfexpr', 'T', ...
          'sliceexpr', 'T', ...
          'slicex', 0.75, ...
          'slicey', 0, ...
          'slicez', -0.35, ...
          'alpha', 1, ...
          'colorbar', 1, ...
          'solnum', 3 );

%% Solver call.
fea = parsephys( fea );
fea = parseprob( fea );

[fea.sol.u,fea.sol.t] = solvetime( fea, ...
                                   'tstep', 0.1, ...
                                   'tmax', 0.1, ...
                                   'tstop', 1e-06, ...
                                   'ischeme', 3, ...
                                   'imass', 2, ...
                                   'icub', 2, ...
                                   'nlrlx', 1, ...
                                   'toldef', 1e-06, ...
                                   'tolchg', 1e-06, ...
                                   'reldef', 0, ...
                                   'relchg', 1, ...
                                   'maxnit', 20, 'init', { 'T0_ht' }, 'solcomp', 1 );

%% Postprocessing.
postplot( fea, ...
          'surfexpr', 'T', ...
          'sliceexpr', 'T', ...
          'slicex', 0.75, ...
          'slicey', 0, ...
          'slicez', -0.35, ...
          'alpha', 1, ...
          'colorbar', 1, ...
          'solnum', 3 );

%% Solver call.
fea = parsephys( fea );
fea = parseprob( fea );

[fea.sol.u,fea.sol.t] = solvetime( fea, ...
                                   'tstep', 0.1, ...
                                   'tmax', 1, ...
                                   'tstop', 1e-06, ...
                                   'ischeme', 3, ...
                                   'imass', 2, ...
                                   'icub', 2, ...
                                   'nlrlx', 1, ...
                                   'toldef', 1e-06, ...
                                   'tolchg', 1e-06, ...
                                   'reldef', 0, ...
                                   'relchg', 1, ...
                                   'maxnit', 20, 'init', { 'T0_ht' }, 'solcomp', 1 );

%% Postprocessing.
postplot( fea, ...
          'surfexpr', 'T', ...
          'sliceexpr', 'T', ...
          'slicex', 0.75, ...
          'slicey', 0, ...
          'slicez', -0.35, ...
          'alpha', 1, ...
          'colorbar', 1, ...
          'solnum', 12 );

%% Geometry operations.
gobj = gobj_block( 0, 1.1, -0.225, 0.225, -0.7, -0.45, 'B1' );
fea = geom_add_gobj( fea, gobj );
fea.geom = geom_apply_formula( fea.geom, 'B1-B2' );
gobj = gobj_block( 0, 0.3, -0.225, 0.225, -0.45, 0, 'B1' );
fea = geom_add_gobj( fea, gobj );
fea.geom = geom_apply_formula( fea.geom, 'CS1-B3' );
fea.grid = gridgen_gmsh( fea, 'hmax', 0.15, 'nsm', 3 );

%% Equation settings.

%% Equation settings.
fea.phys.ht.dvar = { 'T' };
fea.phys.ht.sfun = { 'sflag1' };
fea.phys.ht.eqn.coef = { 'rho_ht', 'rho', 'Density', { '1000' };
                         'cp_ht', 'C_p', 'Heat capacity', { '4200' };
                         'k_ht', 'k', 'Thermal conductivity', { '0.64' };
                         'u_ht', 'u', 'Convection velocity in x-direction', { '0' };
                         'v_ht', 'v', 'Convection velocity in y-direction', { '0' };
                         'w_ht', 'w', 'Convection velocity in z-direction', { '0' };
                         'q_ht', 'Q', 'Heat source', { '4.2e8' };
                         'T0_ht', 'T_0', 'Initial condition for T', { '321' } };
fea.phys.ht.eqn.seqn = 'rho_ht*cp_ht*T'' - k_ht*(Tx_x + Ty_y + Tz_z) + rho_ht*cp_ht*(u_ht*Tx_t + v_ht*Ty_t + w_ht*Tz_t) = q_ht';
fea.phys.ht.eqn.vars = { 'Temperature, T', 'T';
                         'Temperature gradient, T', { 'Tx', 'Ty', 'Tz' } };
fea.phys.ht.prop.isaxi = 0;
fea.phys.ht.prop.artstab.id = 0;
fea.phys.ht.prop.artstab.id_coef = 0.5;
fea.phys.ht.prop.artstab.sd = 0;
fea.phys.ht.prop.artstab.sd_coef = 0.25;
fea.phys.ht.prop.active = 1;

%% Boundary settings.
fea.phys.ht.bdr.sel = [ 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 2, 4, 4, 4 ];
fea.phys.ht.bdr.coef = { 'bcr_ht', 'T = T_0', 'Temperature', { 'T_0' }, { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 }, [], { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
                         'bcc_ht', 'n.(-kgrad T) = 0', 'Convective flux/outflow', [], { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, [], { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
                         'bci_ht', 'n.(-kgrad T + rhoC_puT) = 0', 'Thermal insulation/symmetry', [], { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 'rho_ht*cp_ht*(nx*u_ht+ny*v_ht+nz*w_ht)*T' }, { '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0' };
                         'bcf_ht', '-n.(-kgrad T + rhoC_puT) = q_0 + h*(T_inf-T) + Const*(T_amb4-T4)', 'Heat flux', { { 'q_0', 'h', 'T_inf', 'Const', 'T_amb' } }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 'rho_ht*cp_ht*(nx*u_ht+ny*v_ht+nz*w_ht)*T+(', ')+(', ')*((', ')-T)+(', ')*((', ')^4-T^4)' }, { { '0', '0', '0', '0', '0' }, { '0', '0', '0', '0', '0' }, { '0', '0', '0', '0', '0' }, { '0', '0', '0', '0', '0' }, { '0', '0', '0', '0', '0' }, { '0', '15', '308', '0', '0' }, { '0', '200', '320', '0', '0' }, { '0', '200', '320', '0', '0' }, { '0', '200', '320', '0', '0' }, { '0', '200', '320', '0', '0' }, { '0', '15', '308', '0', '0' }, { '0', '200', '320', '0', '0' }, { '0', '200', '320', '0', '0' }, { '0', '200', '320', '0', '0' } } };
fea.phys.ht.bdr.vars = { 'Normal conductive heat flux, T', '-k_ht*(nx*Tx+ny*Ty+nz*Tz)';
                         'Normal convective heat flux, T', 'rho_ht*cp_ht*(nx*u_ht+ny*v_ht+nz*w_ht)*T';
                         'Normal total heat flux, T', '-k_ht*(nx*Tx+ny*Ty+nz*Tz)+rho_ht*cp_ht*(nx*u_ht+ny*v_ht+nz*w_ht)*T' };
fea.phys.ht.prop.isaxi = 0;
fea.phys.ht.prop.artstab.id = 0;
fea.phys.ht.prop.artstab.id_coef = 0.5;
fea.phys.ht.prop.artstab.sd = 0;
fea.phys.ht.prop.artstab.sd_coef = 0.25;
fea.phys.ht.prop.active = 1;

%% Solver call.
fea = parsephys( fea );
fea = parseprob( fea );

[fea.sol.u,fea.sol.t] = solvetime( fea, ...
                                   'tstep', 0.1, ...
                                   'tmax', 1, ...
                                   'tstop', 1e-06, ...
                                   'ischeme', 3, ...
                                   'imass', 2, ...
                                   'icub', 2, ...
                                   'nlrlx', 1, ...
                                   'toldef', 1e-06, ...
                                   'tolchg', 1e-06, ...
                                   'reldef', 0, ...
                                   'relchg', 1, ...
                                   'maxnit', 20, 'init', { 'T0_ht' }, 'solcomp', 1 );

%% Postprocessing.
postplot( fea, ...
          'surfexpr', 'T', ...
          'sliceexpr', 'T', ...
          'slicex', 0.75, ...
          'slicey', 0, ...
          'slicez', -0.35, ...
          'alpha', 1, ...
          'colorbar', 1, ...
          'solnum', 12 );

%% Solver call.
fea = parsephys( fea );
fea = parseprob( fea );

[fea.sol.u,fea.sol.t] = solvetime( fea, ...
                                   'tstep', 0.1, ...
                                   'tmax', 0.1, ...
                                   'tstop', 1e-06, ...
                                   'ischeme', 3, ...
                                   'imass', 2, ...
                                   'icub', 2, ...
                                   'nlrlx', 1, ...
                                   'toldef', 1e-06, ...
                                   'tolchg', 1e-06, ...
                                   'reldef', 0, ...
                                   'relchg', 1, ...
                                   'maxnit', 20, 'init', { 'T0_ht' }, 'solcomp', 1 );

%% Postprocessing.
postplot( fea, ...
          'surfexpr', 'T', ...
          'sliceexpr', 'T', ...
          'slicex', 0.75, ...
          'slicey', 0, ...
          'slicez', -0.35, ...
          'alpha', 1, ...
          'colorbar', 1, ...
          'solnum', 3 );

